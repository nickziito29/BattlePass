version: "3.9"

services:
  db:
    image: postgres:15
    container_name: battlepass_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: battlepassdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - battlepass-network

  api:
    build: ./BackEnd/api
    container_name: battlepass_api
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/battlepassdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: "7f5d72a9a6b3c8e9f0d1b4a7c8e5f2a3b4c6d8e0f1a2b3c4d5e6f7a8b9c0d1e2"
      OAUTH2_REDIRECT_SUCCESS_URL: http://localhost:5173/login-success
      OAUTH2_REDIRECT_FAILURE_URL: http://localhost:5173/auth?error=oauth_failed

    networks:
      - battlepass-network

  frontend:
    # Define o contexto de build (a pasta do frontend)
    build:
      context: ./FrontEnd/frontend
      dockerfile: Dockerfile
    container_name: battlepass_frontend
    ports:
      # Mapeia a porta 5173 da sua m√°quina para a porta 80 do container Nginx
      - "5173:80"
    depends_on:
      - api # Garante que a API inicie antes do frontend
    networks:
      - battlepass-network

volumes:
  postgres_data:

networks:
  battlepass-network:
    driver: bridge